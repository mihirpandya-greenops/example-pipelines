apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argocd-sync-and-wait
  namespace: argo
spec:
  workflowMetadata:
  entrypoint: argocd-sync-and-wait
  templates:
    - name: argocd-sync-and-wait
      inputs:
        parameters:
        - name: argocd-version
          value: v2.0.5
        - name: application-name
        - name: revision
        - name: flags
          value: --
        - name: argocd-server-address
        - name: argocd-credentials-secret
          value: argocd-user
      script:
        image: argoproj/argocd:{{inputs.parameters.argocd-version}}
        command: [bash]
        env:
          - name: ARGOCD_AUTH_TOKEN
            value: ""
          - name: ARGOCD_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{inputs.parameters.argocd-credentials-secret}}"
                key: username
          - name: ARGOCD_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{inputs.parameters.argocd-credentials-secret}}"
                key: password
          - name: ARGOCD_SERVER
            value: "{{inputs.parameters.argocd-server-address}}"
        source: |
          #!/bin/bash
          set -euo pipefail
          if [[ -z $ARGOCD_AUTH_TOKEN ]] && [[ -z "$ARGOCD_USERNAME" || -z "$ARGOCD_PASSWORD" ]]; then
            echo "Either the ARGOCD_AUTH_TOKEN must be specified, or the ARGOCD_USERNAME/ARGOCD_PASSWORD must be specified."
            exit 1
          fi
          if [ -z $ARGOCD_AUTH_TOKEN ]; then
            yes | argocd login "$ARGOCD_SERVER" --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD {{inputs.parameters.flags}} || echo ${PIPESTATUS[@]}
          fi
          echo "Running as ArgoCD User:"
          argocd account get-user-info {{inputs.parameters.flags}}
          argocd app patch {{inputs.parameters.application-name}} --patch '{"spec": { "source": { "targetRevision": "{{inputs.parameters.revision}}" } }}' --type merge
