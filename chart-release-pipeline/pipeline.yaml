apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: release-chart
spec:
  entrypoint: entry
  templates:
  - name: entry
    dag:
      tasks:
      - name: fetch-new-images
        templateRef:
          name: fetch-image-tags
          template: dockerhub
        arguments:
          parameters:
          - name: username
            value: "{{workflow.parameters.fetch-new-images-username}}"
          - name: organization
            value: "{{workflow.parameters.fetch-new-images-organization}}"
          - name: token-secret-name
            value: "{{workflow.parameters.fetch-new-images-token-secret-name}}"
      - name: decide-new-release-name
        templateRef:
          name: misc
          template: decide-release-version
        dependencies: [fetch-new-images]
        arguments:
          parameters:
          - name: image-names
            value: "{{tasks.fetch-new-images.outputs.parameters.image-names-list}}"
          - name: image-tags
            value: "{{tasks.fetch-new-images.outputs.parameters.image-tags-list}}"
      - name: create-new-branch
        templateRef:
          name: github-wait
          template: create-branch-with-new-release
        dependencies: [decide-new-release-name]
        arguments:
          parameters:
          - name: branch-name
            value: "{{tasks.decide-new-release-name.outputs.parameters.release-version}}"
          - name: github-repo
            value: "{{workflow.parameters.create-new-branch-github-repo}}"
          - name: path-to-file
            value: "{{workflow.parameters.create-new-branch-path-to-file}}"
          - name: github-branch
            value: "{{workflow.parameters.create-new-branch-github-branch}}"
          - name: image-names
            value: "{{tasks.fetch-new-images.outputs.parameters.image-names-list}}"
          - name: updated-revisions
            value: "{{tasks.fetch-new-images.outputs.parameters.image-tags-list}}"
          - name: github-credentials-secret
            value: "{{workflow.parameters.create-new-branch-github-credentials-secret}}"
      - name: deploy-revision
        templateRef:
          name: argocd-step
          template: argocd-sync-and-wait
        dependencies: [create-new-branch]
        arguments:
          parameters:
          - name: argocd-version
            value: "{{workflow.parameters.deploy-revision-argocd-version}}"
          - name: application-name
            value: "{{workflow.parameters.deploy-revision-application-name}}"
          - name: revision
            value: "{{tasks.decide-new-release-name.outputs.parameters.release-version}}"
          - name: flags
            value: "{{workflow.parameters.deploy-revision-flags}}"
          - name: argocd-server-address
            value: "{{workflow.parameters.deploy-revision-argocd-server-address}}"
          - name: argocd-credentials-secret
            value: "{{workflow.parameters.deploy-revision-argocd-credentials-secret}}"
#       - name: run-tests
#         templateRef:
#           name: example-test
#           template: example-test
#         dependencies: [deploy-revision]
#         arguments:
#           parameters:
#           - name: succeed
#             value: "{{workflow.parameters.run-tests-succeed}}"
      - name: create-and-wait-for-pr
        templateRef:
          name: github-wait
          template: pr-with-existing-branch
        dependencies: [deploy-revision]
        when: "{{tasks.deploy-revision.status}} == Succeeded"
        arguments:
          parameters:
          - name: branch-name
            value: "{{tasks.decide-new-release-name.outputs.parameters.release-version}}"
          - name: github-repo
            value: "{{workflow.parameters.create-and-wait-for-pr-github-repo}}"
          - name: github-branch
            value: "{{workflow.parameters.create-and-wait-for-pr-github-branch}}"
          - name: github-credentials-secret
            value: "{{workflow.parameters.create-and-wait-for-pr-github-credentials-secret}}"
